class Solution {
public:
    int dx[4] = {-1,1,0,0};
    int dy[4] = {0,0,-1,1};
    bool valid(int x,int y,int n,int m){
        if(x >= n || x < 0)
            return false;
        if(y >= m || y < 0)
            return false;
        return true;
    }
    bool calc(int x,int y,vector<vector<char>>& board,string &word,int n,int m,int ind,vector<vector<bool>> &vis){
        if(ind == word.length())
            return true;
        vis[x][y] = 1;
        bool found = false;
        for(int i = 0; i < 4; i++){
            int new_x = x + dx[i];
            int new_y = y + dy[i];
            if(valid(new_x,new_y,n,m) && !vis[new_x][new_y] && board[new_x][new_y] == word[ind]){
                found |= calc(new_x,new_y,board,word,n,m,ind+1,vis);
                if(found)
                    return found;
            }
        }
        vis[x][y] = 0;
        return found;
    }
    bool isWordExist(vector<vector<char>>& board, string &word) {
        // Code here
        int n = board.size();
        int m = board[0].size();
        vector<vector<bool>> vis(n,vector<bool>(m,false));
        bool ans = false;
        for(int i = 0; i < n; i++){
            for(int j = 0; j < m; j++){
                if(board[i][j] == word[0]){
                    ans |= calc(i,j,board,word,n,m,1,vis);
                    if(ans)
                        return ans;
                }
            }
        }
        return ans;
    }
};

class Solution {
public:
    int maxCoins(vector<int>&A,int n)
    {
        int dp[n][n] = {0};
        for(int i = 0; i < n; i++){
            if(n%2 == 1)
                dp[i][i] = A[i];
            else if(i+1 < n)
                dp[i][i+1] = max(A[i],A[i+1]); 
        }
        for(int i = 2 + (n+1)%2; i < n; i += 2){
            for(int j = 0; i+j < n; j++){
                int l =  j,r = i+j;
                //i+1 - j
                int front = A[l] + min(dp[l+2][r],dp[l+1][r-1]);
                //i - j-1
                int back = A[r] + min(dp[l+1][r-1],dp[l][r-2]);
                dp[l][r] = max(front,back);
            }
        }
        return dp[0][n-1];
	    //Write your code here
    }
};

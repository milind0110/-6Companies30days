class Solution {
public:
    int divide(int dividend, int divisor) {
        if(dividend == INT_MIN && divisor == -1)
            return INT_MAX;
        if(dividend == INT_MIN && divisor == 1)
            return INT_MIN;
        if(dividend == INT_MIN)
            return ((divisor&1)==1)?divide(dividend+1,divisor):divide(dividend>>1,divisor>>1);
        int sign = 0;
        if(dividend > 0)
            sign++;
        if(divisor > 0)
            sign++;
        sign%=2;
        if(sign)
            sign*=-1;
        else
            sign = 1;
        long divd = abs(dividend),divr = abs(divisor);
        int ans = 0; 
        while(divd >= divr){
            int temp = divr;
            int cnt = 1;
            while((divd - temp) - temp > 0){
                temp <<= 1;
                cnt <<= 1;
            }
            ans += cnt;
            divd -= temp;
        }
        return sign*ans;
    }
};

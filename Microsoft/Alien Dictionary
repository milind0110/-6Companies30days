class Solution{
    public:
    string findOrder(string dict[], int N, int K) {
        vector<int> edges[K];
        int indeg[K] = {0};
        for(int i = 1; i < N; i++){
            for(int j = 0; j < min(dict[i].length(),dict[i-1].length()); j++){
                if(dict[i][j] != dict[i-1][j]){
                    edges[dict[i-1][j]-'a'].push_back(dict[i][j]-'a');
                    indeg[dict[i][j]-'a']++;
                    break;
                }
            }
        }
        queue<int> q;
        for(int i = 0; i < K; i++){
            if(indeg[i] == 0){
                q.push(i);
            }
        }
        string ans;
        while(!q.empty()){
            int x = q.front();
            q.pop();
            ans.push_back('a'+x);
            for(auto i:edges[x]){
                indeg[i]--;
                if(indeg[i] == 0){
                    q.push(i);
                }
            }
        }
        return ans;
        
        //code here
    }
};

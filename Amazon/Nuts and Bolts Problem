class Solution{
public:	
    int partition(char arr[],int low,int high,char pivot){
        int i = low-1;
        for(int j = low; j < high; j++){
            if(arr[j] < pivot){
                i++;
                swap(arr[i],arr[j]);
            }
            else if(arr[j] == pivot){
                swap(arr[j],arr[high]);
                j--;
            }
        }
        swap(arr[i+1],arr[high]);
        return i+1;
    }
    void quicksort(char nuts[],char bolts[],int low,int high){
        if(low < high){
            int pivot = partition(nuts,low,high,bolts[high]);
            partition(bolts,low,high,nuts[pivot]);
            quicksort(nuts,bolts,low,pivot-1);
            quicksort(nuts,bolts,pivot+1,high);
            
        }
    }
	void matchPairs(char nuts[], char bolts[], int n) {
	    quicksort(nuts,bolts,0,n-1);
	    // code here
	}

};

class Solution {
public:
	bool isPossible(int N, vector<pair<int, int> >& prerequisites) {
	    int indeg[N] = {0};
	    vector<int> edges[N];
	    for(pair<int,int> p: prerequisites){
	        indeg[p.first]++;
	        edges[p.second].push_back(p.first);
	    }
	    queue<int> q;
	    for(int i = 0; i < N; i++){
	        if(indeg[i] == 0){
	            q.push(i);
	        }
	    }
	    int cnt = 0;
	    while(!q.empty()){
	        int x = q.front();
	        q.pop();
	        cnt++;
	        for(auto i:edges[x]){
	            indeg[i]--;
	            if(indeg[i] == 0){
	                q.push(i);
	            }
	        }
	    }
	    return cnt == N;
	    // Code here
	}
};

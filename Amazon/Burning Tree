class Solution {
  public:
    int minTime(Node* root, int target) 
    {
        map<Node*,Node*> par;
        queue<Node*> q;
        q.push(root);
        par[root] = NULL;
        Node* targetnode = NULL;
        while(!q.empty()){
            Node* x = q.front();
            q.pop();
            if(x->data == target){
                targetnode = x;
            }
            if(x->left){
                q.push(x->left);
                par[x->left] = x;
            }
            if(x->right){
                q.push(x->right);
                par[x->right] = x;
            }
        }
        map<Node*,int> dis;
        dis[targetnode] = 1;
        q.push(targetnode);
        int mx = 0;
        while(!q.empty()){
            Node* x = q.front();
            q.pop();
            mx = max(mx,dis[x]);
            if(x->left && dis[x->left] == 0){
                q.push(x->left);
                dis[x->left] = dis[x]+1;
            }
            if(x->right && dis[x->right] == 0){
                q.push(x->right);
                dis[x->right] = dis[x]+1;
            }
            if(par[x] && dis[par[x]] == 0){
                q.push(par[x]);
                dis[par[x]] = dis[x]+1;
            }
        }
        return mx-1;
        // Your code goes here
    }
};
